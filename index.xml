<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ILearnQuantum</title>
    <link>https://gopal-dahale.github.io/ILearnQuantum/</link>
    <description>Recent content on ILearnQuantum</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 18 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gopal-dahale.github.io/ILearnQuantum/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>QAOA to solve MIS</title>
      <link>https://gopal-dahale.github.io/ILearnQuantum/posts/mis/qaoa/</link>
      <pubDate>Sat, 18 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gopal-dahale.github.io/ILearnQuantum/posts/mis/qaoa/</guid>
      <description>In the last blog, we talked about the Quantum Adiabatic Algorithm (QAA) and used it solve the MIS problem. Here, we will discuss the Quantum Approximation Optimization Algorithm (QAOA) which is popular algorithm in the gate based quantum computing. We will use QAOA to solve the same MIS problem that we tackled in the last blog.
Algorithm description In QAOA, we start with an eigenstate of the mixer hamiltonian. We then exponentiate and parameterize in $p$ steps by $p$ betas and gammas:</description>
    </item>
    
    <item>
      <title>Maximum Independent Set with Quantum Adiabatic Algorithm</title>
      <link>https://gopal-dahale.github.io/ILearnQuantum/posts/mis/qaa/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gopal-dahale.github.io/ILearnQuantum/posts/mis/qaa/</guid>
      <description>Recently, I participated in the The Blaise Pascal [re]Generative Quantum Challenge by Pasqal and got to learn about Pasqal&amp;rsquo;s neutral atom arrays and pulse-level programming as well as implementing quantum algorithms on an analog device. Here, I will share my learnings and in this blog particularly, we will solve the MIS problem with the quantum adiabatic algorithm using Pulser ( Citation: Henrique,&amp;#32;Grijalva &amp;amp; al.,&amp;#32; Henrique,&amp;#32; S.,&amp;#32; Grijalva,&amp;#32; S.,&amp;#32; Henriet,&amp;#32; L.,&amp;#32; Cornillot,&amp;#32; A.</description>
    </item>
    
    <item>
      <title>Brassard-HÃ¸yer-Tapp Algorithm in Qiskit</title>
      <link>https://gopal-dahale.github.io/ILearnQuantum/posts/bht/bht_qiskit/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gopal-dahale.github.io/ILearnQuantum/posts/bht/bht_qiskit/</guid>
      <description>A Womanium Global Media Project Initiative
Overview Previously, we discussed the theoritical aspects of Quantum Collision Finding and the BHT algorithm. We now try to implement in the BHT algorithm using Qiskit for small functions. We&amp;rsquo;ll create a class for this and explain it step-by-step. First let&amp;rsquo;s import essential packages.
import numpy as np from qiskit import QuantumCircuit from qiskit.primitives import Sampler from qiskit.tools.visualization import plot_histogram from qiskit.algorithms.algorithm_result import AlgorithmResult from qiskit.</description>
    </item>
    
    <item>
      <title>Quantum Collision Finding</title>
      <link>https://gopal-dahale.github.io/ILearnQuantum/posts/bht/quantum_collision_finding/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gopal-dahale.github.io/ILearnQuantum/posts/bht/quantum_collision_finding/</guid>
      <description>A Womanium Global Media Project Initiative.
Collisions in hash functions A collision in a hash function is when two different inputs produce the same output hash. This is a problem because it violates the fundamental premise of a hash function, which is to produce a unique output for each unique input. Collisions can be exploited by attackers to create fraudulent transactions or gain unauthorized access to secure systems, making them a critical concern in the design and implementation of hash functions.</description>
    </item>
    
    <item>
      <title>Deterministic Measurement-based imaginary time evolution</title>
      <link>https://gopal-dahale.github.io/ILearnQuantum/posts/dmbite/dmbite/</link>
      <pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gopal-dahale.github.io/ILearnQuantum/posts/dmbite/dmbite/</guid>
      <description>Paper: ( Citation: Mao,&amp;#32;Chaudhary &amp;amp; al.,&amp;#32;2022 Mao,&amp;#32; Y.,&amp;#32; Chaudhary,&amp;#32; M.,&amp;#32; Kondappan,&amp;#32; M.,&amp;#32; Shi,&amp;#32; J.,&amp;#32; Ilo-Okeke,&amp;#32; E.,&amp;#32; Ivannikov,&amp;#32; V.&amp;#32;&amp;amp;&amp;#32;Byrnes,&amp;#32; T. &amp;#32; (2022). &amp;#32; Deterministic measurement-based imaginary time evolution. https://doi.org/0.48550/arXiv.2202.09100 ) Imaginary time evolution (ITE) ITE is a technique to find the ground state of a system where the time t is replaced by imagainary time $i\tau$. To understand this, let us consider the time-dependent Schrodinger equation for a system with Hamiltonian $H$:</description>
    </item>
    
    
  </channel>
</rss>
