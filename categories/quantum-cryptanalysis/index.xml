<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Quantum Cryptanalysis on ILearnQuantum</title>
    <link>https://gopal-dahale.github.io/ILearnQuantum/categories/quantum-cryptanalysis/</link>
    <description>Recent content in Quantum Cryptanalysis on ILearnQuantum</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 21 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gopal-dahale.github.io/ILearnQuantum/categories/quantum-cryptanalysis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quantum Collision Finding</title>
      <link>https://gopal-dahale.github.io/ILearnQuantum/posts/bht/quantum_collision_finding/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gopal-dahale.github.io/ILearnQuantum/posts/bht/quantum_collision_finding/</guid>
      <description>A Womanium Global Media Project Initiative.
Collisions in hash functions A collision in a hash function is when two different inputs produce the same output hash. This is a problem because it violates the fundamental premise of a hash function, which is to produce a unique output for each unique input. Collisions can be exploited by attackers to create fraudulent transactions or gain unauthorized access to secure systems, making them a critical concern in the design and implementation of hash functions.</description>
    </item>
    
  </channel>
</rss>
